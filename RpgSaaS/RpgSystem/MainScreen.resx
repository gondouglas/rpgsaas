<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMIAAACbCAIAAAC/AtNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACRVJREFUeF7t2LGtJEcQBFGaTFto0Ln2L5AIYHgBSkSLlQhpn1rCTv/18+f+/udX
        ErYQCVuIhC1EwhYiYQuRsIVI2EIkbCESthAJW4iELUTCFiJhC5GwhUjYQiRsIRK2EAlbiISfnzuj028h
        ErYQCXdGIRK2EAlbiIQtRMIWImELkbCFSNhCJGwhErYQCVuIhDujEAlbiIQtRMIWImELkbCFSNhCJGwh
        ErYQCVuIhC1Ewp1RiIQtRMIWImELkbCFSNhCJGwhErYQCVuIhC1EwhYigTMKXNf/6D/OyAPbQiRsIRK2
        EAlbiIQtRMIWImELkbCFSNhCJGwhErYQCVuIhC1EwhYiYQuRsIVI2EIkbCEStn//fmd0+kDvjE4f6J3R
        6QO9v9jXg+6D//RbiIQtRMK9G4VI2EIkbCESthAJW4iELUTCFiJhC5GwhUjYQiRsIRLujEIkbCESthAJ
        W4iELUTCFiJhC5GwhUjYQiRsIRK2EAl3RiESthAJW4iELUTCFiJhC5GwhUjYQiRsIRK2EAlbiIR7xb6e
        dB/8pw/0zuj0gd4ZnT7QO6PTB3p/sa8H3Qf/6bcQCVuIhHs3CpGwhUjYQiRsIRK2EAlbiIQtRMIWImEL
        kbCFSNhCJNwZhUjYQiRsIRK2EAlbiIQtRMIWImELkbCFSNhCJGwhEu6MQiRsIRK2EAlbiIQtRMIWImEL
        kbCFSNhCJGwhErYQCfeKfT3pPvhPH+id0ekDvTM6faB3RqcP9P5iXw+6D/7TbyESthAJ924UImELkbCF
        SNhCJGwhErYQCVuIhC1EwhYiYQuRsIVIuDMKkbCFSNhCJGwhErYQCVuIhC1EwhYiYQuRsIVI2EIk3BmF
        SNhCJGwhErYQCVuIhC1EwhYiYQuRsIVI2EIkbCES7hX7etJ98J8+0Duj0wd6Z3T6QO+MTh/o/cW+HnQf
        /KffQiRsIRLu3ShEwhYiYQuRsIVI2EIkbCESthAJW4iELUTCFiJhC5FwZxQiYQuRsIVI2EIkbCESthAJ
        W4iELUTCFiJhC5GwhUi4MwqRsIVI2EIkbCESthAJW4iELUTCFiJhC5GwhUjYQiTcK/b1pPvgP32gd0an
        D/TO6PSB3hmdPtD7i3096D74T7+FSNhCJNy7UYiELUTCFiJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWIuHO
        KETCFiJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWImELkXBnFCJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWImEL
        kbCFSLhX7OtJ98F/+kDvjE4f6J3R6QO9Mzp9oPcX+3rQffCffguRsIVIuHejEAlbiIQtRMIWImELkbCF
        SNhCJGwhErYQCVuIhC1Ewp1RiIQtRMIWImELkbCFSNhCJGwhErYQCVuIhC1EwhYi4c4oRMIWImELkbCF
        SNhCJGwhErYQCVuIhC1EwhYiYQuRcK/Y15Pug//0gd4ZnT7QO6PTB3pndPpA7y/29aD74D/9FiJhC5Fw
        70YhErYQCVuIhC1EwhYiYQuRsIVI2EIkbCESthAJW4iEO6MQCVuIhC1EwhYiYQuRsIVI2EIkbCESthAJ
        W4iELUTCnVGIhC1EwhYiYQuRsIVI2EIkbCESthAJW4iELUTCFiLhXrGvJ90H/+kDvTM6faB3RqcP9M7o
        9IHeX+zrQffBf/otRMIWIuHejUIkbCESthAJW4iELUTCFiJhC5GwhUjYQiRsIRK2EAl3RiESthAJW4iE
        LUTCFiJhC5GwhUjYQiRsIRK2EAlbiIQ7oxAJW4iELUTCFiJhC5GwhUjYQiRsIRK2EAlbiIQtRMK9Yl9P
        ug/+0wd6Z3T6QO+MTh/ondHpA72/2NeD7oP/9FuIhC1Ewr0bhUjYQiRsIRK2EAlbiIQtRMIWImELkbCF
        SNhCJGwhEu6MQiRsIRK2EAlbiIQtRMIWImELkbCFSNhCJGwhErYQCXdGIRK2EAlbiIQtRMIWImELkbCF
        SNhCJGwhErYQCVuIhHvFvp50H/ynD/TO6PSB3hmdPtA7o9MHen+xrwfdB//ptxAJW4iEezcKkbCFSNhC
        JGwhErYQCVuIhC1EwhYiYQuRsIVI2EIk3BmFSNhCJGwhErYQCVuIhC1EwhYiYQuRsIVI2EIkbCES7oxC
        JGwhErYQCVuIhC1EwhYiYQuRsIVI2EIkbCESthAJ94p9Pek++E8f6J3R6QO9Mzp9oHdGpw/0/mJfD7oP
        /tNvIRK2EAn3bhQiYQuRsIVI2EIkbCESthAJW4iELUTCFiJhC5GwhUi4MwqRsIVI2EIkbCESthAJW4iE
        LUTCFiJhC5GwhUjYQiTcGYVI2EIkbCESthAJW4iELUTCFiJhC5GwhUjYQiRsIRLuFft60n3wnz7QO6PT
        B3pndPpA74xOH+j9xb4edB/8p99CJGwhEu7dKETCFiJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWImELkXBn
        FCJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWImELkbCFSLgzCpGwhUjYQiRsIRK2EAlbiIQtRMIWImELkbCF
        SNhCJNwr9vWk++A/faB3RqcP9M7o9IHeGZ0+0PuLfT3oPvhPv4VI2EIk3LtRiIQtRMIWImELkbCFSNhC
        JGwhErYQCVuIhC1EwhYi4c4oRMIWImELkbCFSNhCJGwhErYQCVuIhC1EwhYiYQuRcGcUImELkbCFSNhC
        JGwhErYQCVuIhC1EwhYiYQuRsIVIuFfs60n3wX/6QO+MTh/ondHpA70zOn2g9xf7etB98J9+C5GwhUi4
        d6MQCVuIhC1EwhYiYQuRsIVI2EIkbCESthAJW4iELUTCnVGIhC1EwhYiYQuRsIVI2EIkbCESthAJW4iE
        LUTCFiLhzihEwhYiYQuRsIVI2EIkbCESthAJW4iELUTCFiJhC5Fwr9jXk+6D//SB3hmdPtA7o9MHemd0
        +kDvL/b1oPvgP/0WImELkXDvRiESthAJW4iELUTCFiJhC5GwhUjYQiRsIRK2EAlbiIQ7oxAJW4iELUTC
        FiJhC5GwhUjYQiRsIRK2EAlbiIQtRMKdUYiELUTCFiJhC5GwhUjYQiRsIRK2EAlbiIQtRMIWIuHn5zdK
        HtLlXarg7gAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="menu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 20</value>
  </metadata>
</root>